if [ ! -d /tmp/$USER ]; then
	mkdir /tmp/$USER 2>/dev/null
fi

source ~/.config/zsh/functions.zsh
source ~/.config/zsh/env.zsh
source ~/.config/zsh/aliases.zsh
source ~/.config/zsh/config.zsh
{{- if .work }}
source ~/.config/zsh/complete.zsh
{{- end }}

{{ if ne .type "server" -}}
if [ -z $DISPLAY ] && [ "$(tty)" = "/dev/tty1" ]; then
	exec sway
fi
{{- end }}

# load completion
[ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh
[ -f /usr/share/fzf/completion.zsh ] && source /usr/share/fzf/completion.zsh
#which gopass >/dev/null && source <(gopass completion zsh)
which kubectl >/dev/null && source <(kubectl completion zsh)
which minikube >/dev/null && source <(minikube completion zsh)
{{- if .work }}
which scw >/dev/null && source <(scw autocomplete script shell=zsh)

source <(switcher init zsh)
source <(compdef _switcher switch)

func init_switch () {
  # if ping ok continue else stop
  ping -W1 -c1 8.8.8.8 >/dev/null 2>&1 || { echo "No internet connection"; return 1;}

  # if switch ok return else login to vault and restart
  switch . 2>&1 | grep -q "403. Errors" || return 0

  echo "Vault token expired. Authenticating to vault"

  # login to vault
  vault token lookup >/dev/null 2>&1 || vault login -method=oidc >/dev/null 2>&1

  switch . >/dev/null 2>&1 || (echo "Unknown error")
}
init_switch

{{- end }}
